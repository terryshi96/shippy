// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/consignment.proto

package go_micro_srv_consignment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 定义message以及使用数字占位。宽泛的讲，message就是你的数据结构，由protobuf处理
type Consignment struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Description          string       `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Weight               int32        `protobuf:"varint,3,opt,name=weight" json:"weight,omitempty"`
	Containers           []*Container `protobuf:"bytes,4,rep,name=containers" json:"containers,omitempty"`
	VesselId             string       `protobuf:"bytes,5,opt,name=vessel_id,json=vesselId" json:"vessel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Consignment) Reset()         { *m = Consignment{} }
func (m *Consignment) String() string { return proto.CompactTextString(m) }
func (*Consignment) ProtoMessage()    {}
func (*Consignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_consignment_ab404d775757286d, []int{0}
}
func (m *Consignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consignment.Unmarshal(m, b)
}
func (m *Consignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consignment.Marshal(b, m, deterministic)
}
func (dst *Consignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consignment.Merge(dst, src)
}
func (m *Consignment) XXX_Size() int {
	return xxx_messageInfo_Consignment.Size(m)
}
func (m *Consignment) XXX_DiscardUnknown() {
	xxx_messageInfo_Consignment.DiscardUnknown(m)
}

var xxx_messageInfo_Consignment proto.InternalMessageInfo

func (m *Consignment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Consignment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Consignment) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Consignment) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *Consignment) GetVesselId() string {
	if m != nil {
		return m.VesselId
	}
	return ""
}

type Container struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CustomerId           string   `protobuf:"bytes,2,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	Origin               string   `protobuf:"bytes,3,opt,name=origin" json:"origin,omitempty"`
	UserId               string   `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Container) Reset()         { *m = Container{} }
func (m *Container) String() string { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()    {}
func (*Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_consignment_ab404d775757286d, []int{1}
}
func (m *Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Container.Unmarshal(m, b)
}
func (m *Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Container.Marshal(b, m, deterministic)
}
func (dst *Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Container.Merge(dst, src)
}
func (m *Container) XXX_Size() int {
	return xxx_messageInfo_Container.Size(m)
}
func (m *Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Container proto.InternalMessageInfo

func (m *Container) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Container) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *Container) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *Container) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// Created a blank get request
type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_consignment_ab404d775757286d, []int{2}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type Response struct {
	Created     bool         `protobuf:"varint,1,opt,name=created" json:"created,omitempty"`
	Consignment *Consignment `protobuf:"bytes,2,opt,name=consignment" json:"consignment,omitempty"`
	// Added a pluralised consignment to our generic response message
	Consignments         []*Consignment `protobuf:"bytes,3,rep,name=consignments" json:"consignments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_consignment_ab404d775757286d, []int{3}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetConsignment() *Consignment {
	if m != nil {
		return m.Consignment
	}
	return nil
}

func (m *Response) GetConsignments() []*Consignment {
	if m != nil {
		return m.Consignments
	}
	return nil
}

func init() {
	proto.RegisterType((*Consignment)(nil), "go.micro.srv.consignment.Consignment")
	proto.RegisterType((*Container)(nil), "go.micro.srv.consignment.Container")
	proto.RegisterType((*GetRequest)(nil), "go.micro.srv.consignment.GetRequest")
	proto.RegisterType((*Response)(nil), "go.micro.srv.consignment.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ShippingService service

type ShippingServiceClient interface {
	// 需要实现的方法
	// 创建货运记录
	CreateConsignment(ctx context.Context, in *Consignment, opts ...client.CallOption) (*Response, error)
	// 得到所有货运记录
	GetConsignments(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error)
}

type shippingServiceClient struct {
	c           client.Client
	serviceName string
}

func NewShippingServiceClient(serviceName string, c client.Client) ShippingServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.consignment"
	}
	return &shippingServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *shippingServiceClient) CreateConsignment(ctx context.Context, in *Consignment, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ShippingService.CreateConsignment", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingServiceClient) GetConsignments(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ShippingService.GetConsignments", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ShippingService service

type ShippingServiceHandler interface {
	// 需要实现的方法
	// 创建货运记录
	CreateConsignment(context.Context, *Consignment, *Response) error
	// 得到所有货运记录
	GetConsignments(context.Context, *GetRequest, *Response) error
}

func RegisterShippingServiceHandler(s server.Server, hdlr ShippingServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ShippingService{hdlr}, opts...))
}

type ShippingService struct {
	ShippingServiceHandler
}

func (h *ShippingService) CreateConsignment(ctx context.Context, in *Consignment, out *Response) error {
	return h.ShippingServiceHandler.CreateConsignment(ctx, in, out)
}

func (h *ShippingService) GetConsignments(ctx context.Context, in *GetRequest, out *Response) error {
	return h.ShippingServiceHandler.GetConsignments(ctx, in, out)
}

func init() {
	proto.RegisterFile("proto/consignment.proto", fileDescriptor_consignment_ab404d775757286d)
}

var fileDescriptor_consignment_ab404d775757286d = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x4e, 0xeb, 0x30,
	0x10, 0x87, 0x5f, 0xfa, 0x3f, 0x93, 0xea, 0x55, 0x78, 0x41, 0x2d, 0x58, 0x10, 0x05, 0x90, 0xba,
	0x0a, 0x52, 0x39, 0x42, 0x16, 0x55, 0xb6, 0xee, 0x1a, 0x41, 0x89, 0x47, 0xa9, 0x25, 0x62, 0x07,
	0xdb, 0x2d, 0x57, 0x83, 0x6b, 0x70, 0x22, 0x54, 0xa7, 0xa1, 0x46, 0xa8, 0xa8, 0xbb, 0xfc, 0x66,
	0xfc, 0x4d, 0x3e, 0x8f, 0x0c, 0xd3, 0x5a, 0x2b, 0xab, 0xee, 0x0a, 0x25, 0x8d, 0x28, 0x65, 0x85,
	0xd2, 0xa6, 0xae, 0x42, 0x68, 0xa9, 0xd2, 0x4a, 0x14, 0x5a, 0xa5, 0x46, 0x6f, 0x53, 0xaf, 0x9f,
	0x7c, 0x04, 0x10, 0x65, 0x87, 0x4c, 0xfe, 0x43, 0x47, 0x70, 0x1a, 0xc4, 0xc1, 0x2c, 0x64, 0x1d,
	0xc1, 0x49, 0x0c, 0x11, 0x47, 0x53, 0x68, 0x51, 0x5b, 0xa1, 0x24, 0xed, 0xb8, 0x86, 0x5f, 0x22,
	0xe7, 0x30, 0x78, 0x43, 0x51, 0xae, 0x2d, 0xed, 0xc6, 0xc1, 0xac, 0xcf, 0xf6, 0x89, 0x64, 0x00,
	0x85, 0x92, 0x76, 0x25, 0x24, 0x6a, 0x43, 0x7b, 0x71, 0x77, 0x16, 0xcd, 0xaf, 0xd3, 0x63, 0x22,
	0x69, 0xd6, 0x9e, 0x65, 0x1e, 0x46, 0x2e, 0x21, 0xdc, 0xa2, 0x31, 0xf8, 0xf2, 0x28, 0x38, 0xed,
	0xbb, 0x9f, 0x8f, 0x9a, 0x42, 0xce, 0x93, 0x0a, 0xc2, 0x6f, 0xea, 0x97, 0xf8, 0x15, 0x44, 0xc5,
	0xc6, 0x58, 0x55, 0xa1, 0xde, 0xb1, 0x8d, 0x38, 0xb4, 0xa5, 0x9c, 0xef, 0xbc, 0x95, 0x16, 0xa5,
	0x90, 0xce, 0x3b, 0x64, 0xfb, 0x44, 0xa6, 0x30, 0xdc, 0x98, 0x06, 0xea, 0x35, 0x8d, 0x5d, 0xcc,
	0x79, 0x32, 0x06, 0x58, 0xa0, 0x65, 0xf8, 0xba, 0x41, 0x63, 0x93, 0xf7, 0x00, 0x46, 0x0c, 0x4d,
	0xad, 0xa4, 0x41, 0x42, 0x61, 0x58, 0x68, 0x5c, 0x59, 0x6c, 0x0c, 0x46, 0xac, 0x8d, 0x64, 0x01,
	0x91, 0x77, 0x4b, 0xa7, 0x11, 0xcd, 0x6f, 0xff, 0x5c, 0x43, 0xfb, 0xcd, 0x7c, 0x92, 0xe4, 0x30,
	0xf6, 0xa2, 0xa1, 0x5d, 0xb7, 0xd0, 0x13, 0x27, 0xfd, 0x40, 0xe7, 0x9f, 0x01, 0x4c, 0x96, 0x6b,
	0x51, 0xd7, 0x42, 0x96, 0x4b, 0xd4, 0x5b, 0x51, 0x20, 0x79, 0x82, 0xb3, 0xcc, 0x29, 0xfb, 0x8f,
	0xe1, 0xb4, 0xe9, 0x17, 0xc9, 0xf1, 0x63, 0xed, 0x86, 0x92, 0x7f, 0xe4, 0x01, 0x26, 0x0b, 0xb4,
	0x1e, 0x67, 0xc8, 0xcd, 0x71, 0xf0, 0xb0, 0xe9, 0xd3, 0xc6, 0x3f, 0x0f, 0xdc, 0x4b, 0xbf, 0xff,
	0x0a, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x8b, 0xee, 0xc3, 0x04, 0x03, 0x00, 0x00,
}
